% вспомогательный предикат - есть ли в списке элемент
mymember([H|_], H):- !.
mymember([_|T], H):- mymember(T, H).

% вспомогательный предикат-присвоение
myassign(X, X).

% предикат, делающий список из уникальных элементов
myunique([], []):- !.

% решил написать так, подобие ветвления, чтобы не писать два предиката
% и ради проверки можно ли так написать 
myunique([H1|T1], T3):- 
    myunique(T1,T2),
    ((mymember(T2,H1),
    myassign(T2,T3));
    (not(mymember(T2,H1)),
    myassign([H1|T2],T3))).

% внутренние предикаты вычисления 
% теоретико-множественного пересечения
% 1. корневой предикат для пустого первого списка
myintersect_service([],_,[]):- !.

% 2. предикат для случая, когда головы первого списка нет во втором списке
myintersect_service([H1|T1],[H2|T2],T3):- 
    not(mymember([H2|T2], H1)),  
    myintersect_service(T1, [H2|T2], T3).

% 3. предикат для случая, когда голова списка есть во втором списке
myintersect_service([H1|T1], [H2|T2], [H1|T3]):- 
    mymember([H2|T2], H1), 
    myintersect_service(T1, [H2|T2], T3).

% главный предикат "фронт-енд" - вычисление пересечения, 
% удаление дубликатов
% и отключение дальнейших вычислений
myintersect(X,Y,Z):-
    myintersect_service(X,Y,R),
    myunique(R,Z),!.